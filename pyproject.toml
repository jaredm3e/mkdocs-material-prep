[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "mkdocs-material-prep"
version = "1.0.0"
description = "A tool to sanitize markdown files for external publication by removing PII"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "Documentation Team", email = "contact@example.com"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Documentation",
    "Topic :: Text Processing :: Markup",
    "Topic :: Utilities",
]
keywords = ["markdown", "documentation", "pii", "privacy", "mkdocs"]
requires-python = ">=3.8"
dependencies = [
    "PyYAML>=6.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
]

[project.urls]
Homepage = "https://github.com/jaredm3e/mkdocs-material-prep"
Repository = "https://github.com/jaredm3e/mkdocs-material-prep.git"
Issues = "https://github.com/jaredm3e/mkdocs-material-prep/issues"

[project.scripts]
mkdocs-material-prep = "mkdocs_material_prep:main"

[tool.setuptools]
py-modules = ["mkdocs_material_prep"]

[tool.pytest.ini_options]
testpaths = ["."]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--tb=short",
    "--strict-markers",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

[tool.coverage.run]
source = ["mkdocs_material_prep"]
omit = [
    "test_*.py",
    "*/tests/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
